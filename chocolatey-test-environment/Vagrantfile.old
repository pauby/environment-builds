unless Vagrant.has_plugin?("vagrant-reload")
  raise 'vagrant-reload is not installed!'
end

# http://docs.vagrantup.com/v2/vagrantfile/machine_settings.html
Vagrant.configure("2") do |config|

  folder_syncs = [
    { local: 'auto-install', remote: '/auto-install' },
    { local: '../resources/packages', remote: '/packages' },
    { local: '../shell',              remote: '/shell' }
  ]

  config.vm.box = "ferventcoder/win2012r2-x64-nocm"

  config.windows.halt_timeout = 60
  config.winrm.retry_limit = 30
  config.winrm.retry_delay = 10

  config.winrm.username = "vagrant"
  config.winrm.password = "vagrant"

  config.vm.guest = :windows

  config.vm.communicator = "winrm"

  config.vm.network :forwarded_port, guest: 5985, host: 5985, id: "winrm", auto_correct: true, host_ip: "127.0.0.1"
  config.vm.network :forwarded_port, guest: 3389, host: 3389, id: "rdp", auto_correct: true, host_ip: "127.0.0.1"
  config.vm.network :forwarded_port, guest: 22, host: 2222, id: "ssh", auto_correct: true, host_ip: "127.0.0.1"

  folder_syncs.each do |folder|
    config.vm.synced_folder folder[:local], folder[:remote]
  end

  config.vm.provision :shell, :path => "../shell/PrepareWindows.ps1", :powershell_elevated_interactive => true
  config.vm.provision :shell, :path => "../shell/InstallChocolatey.ps1", args: "-UseLocalSource", :powershell_elevated_interactive => true
  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    choco source add -n=auto-install -s"c:\\auto-install" --priority=5
  SHELL
  config.vm.provision :shell, :path => "../shell/InstallBGInfo.ps1", :powershell_elevated_interactive => true

  # When choco installs it indicates it requires a reboot so to start with a clean VM, reboot after all the setup is done
  #config.vm.provision :reload

$packageTestScript = <<SCRIPT
setx.exe trigger 1  # run arbitrary win32 application so LASTEXITCODE is 0
$ErrorActionPreference = "Stop"
$env:PATH +=";$($env:SystemDrive)\\ProgramData\\chocolatey\\bin"
# https://github.com/chocolatey/choco/issues/512
$validExitCodes = @(0, 1605, 1614, 1641, 3010)

Write-Output "Testing package if a line is uncommented."
# THIS IS WHAT YOU CHANGE
# - uncomment one of the two and edit it appropriately
# - See the README for details
#choco.exe install -fdvy INSERT_NAME --version INSERT_VERSION  --allow-downgrade
#choco.exe install -fdvy INSERT_NAME  --allow-downgrade --source "'c:\\auto-install;c:\\packages;http://chocolatey.org/api/v2/'"

$exitCode = $LASTEXITCODE

Write-Host "Exit code was $exitCode"
if ($validExitCodes -contains $exitCode) {
  Exit 0
}

Exit $exitCode
SCRIPT

  config.vm.provider :virtualbox do |v, override|
    v.gui = true
    v.customize ["modifyvm", :id, "--memory", "4096"]
    v.customize ["modifyvm", :id, "--cpus", "1"]
    v.customize ["modifyvm", :id, "--vram", 128]
    v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
    v.customize ["modifyvm", :id, "--audio", "none"]
    v.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
    v.customize ["modifyvm", :id, "--draganddrop", "hosttoguest"]
    v.customize ["modifyvm", :id, "--usb", "off"]
    v.linked_clone = true if Vagrant::VERSION >= '1.8.0'
  end

  config.vm.provision :shell, :inline => $packageTestScript, :powershell_elevated_interactive => true

      config.vm.provider :hyperv do |v, override|
      override.vm.network "public_network", bridge: "Default Switch"
      override.vm.box = "pauby/win2012r2-x64"

      v.enable_virtualization_extensions = true
      v.maxmemory = 4096
      v.cpus = 1
      v.ip_address_timeout = 130
      v.linked_clone = true
      v.vm_integration_services = {
        guest_service_interface: true,
        heartbeat: true,
        key_value_pair_exchange: true,
        shutdown: true,
        time_synchronization: true,
        vss: true
      }

      smbcreds_filename = '../vagrant-smb.txt'
      if File.exists?(smbcreds_filename)
        file_data = File.read(smbcreds_filename).split
        smbusername = file_data[0]
        smbpassword = file_data[1]

        folder_syncs.each do |folder|
          override.vm.synced_folder folder[:local], folder[:remote], smb_username: smbusername, smb_password: smbpassword
        end
      end

      override.vm.provision "Stop SMB Idle Disconnects", type: 'shell', run: 'once', privileged: true, inline: 'net config server /autodisconnect:-1'
    end
end
