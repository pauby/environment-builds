unless Vagrant.has_plugin?("vagrant-reload")
  raise 'vagrant-reload is not installed!'
end

Vagrant.configure("2") do |config|

  config.vm.define "win2016" do |cfg|
    cfg.vm.box = "StefanScherer/windows_2016"

    cfg.windows.halt_timeout = 60
    # https://github.com/hashicorp/vagrant/issues/6430
    cfg.winrm.retry_limit = 30
    cfg.winrm.retry_delay = 10

    cfg.winrm.username = "vagrant"
    cfg.winrm.password = "vagrant"
    cfg.vm.guest = :windows
    cfg.vm.communicator = "winrm"

    cfg.vm.hostname = "win2016"
    cfg.windows.set_work_network = true

    cfg.vm.network :forwarded_port, guest: 5985, host: 5985, id: "winrm", auto_correct: true, host_ip: "127.0.0.1"
    cfg.vm.network :forwarded_port, guest: 3389, host: 3389, id: "rdp", auto_correct: true, host_ip: "127.0.0.1"
    cfg.vm.network :forwarded_port, guest: 22, host: 2222, id: "ssh", auto_correct: true, host_ip: "127.0.0.1"

    cfg.vm.synced_folder "../packages", "/packages"
    cfg.vm.synced_folder "../licenses", "/licenses"
    cfg.vm.synced_folder "../scripts", "/scripts"
    cfg.vm.synced_folder "~/git/pauby/mine/presentations", "/presentations"
    cfg.vm.synced_folder "~/git/pauby/mine/private-presentations", "/private-presentations"

    cfg.vm.provider :virtualbox do |v, override|
      #override.vm.network :private_network, ip: "10.10.13.14"
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.gui = true
      v.customize ["modifyvm", :id, "--vram", 128]
      v.customize ["modifyvm", :id, "--memory", "1024"]
      v.customize ["modifyvm", :id, "--audio", "none"]
      v.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
      v.customize ["modifyvm", :id, "--draganddrop", "hosttoguest"]
      v.customize ["modifyvm", :id, "--usb", "off"]
      # linked clones for speed and size
      v.linked_clone = true if Vagrant::VERSION >= '1.8.0'
    end

    cfg.vm.provision :shell, :path => "../scripts/ConfigureAutoLogin.ps1", privileged: false
    cfg.vm.provision :shell, :path => "../scripts/PrepareWindows.ps1", privileged: false
    cfg.vm.provision :shell, :path => "../scripts/InstallNet4.ps1", privileged: false
    cfg.vm.provision :shell, :path => "../scripts/InstallChocolatey.ps1", args: "-UseLocalSource", privileged: false
    cfg.vm.provision :shell, :path => "../scripts/NotifyGuiAppsOfEnvironmentChanges.ps1", privileged: false
    cfg.vm.provision :shell, :path => "../scripts/InstallStandardApps.ps1", privileged: false
    cfg.vm.provision :shell, :path => "../scripts/InstallBGInfo.ps1", privileged: false
    cfg.vm.provision :shell, :path => "../scripts/InstallVMGuestTools.ps1", privileged: false
    cfg.vm.provision :shell, :path => "../scripts/InstallChocoPackage.ps1", args: "-Name 'vscode, vscode-powershell, zoomit'", privileged: false
    cfg.vm.provision :shell, :path => "../scripts/SetRegion.ps1", args: "-Region 'UK'", privileged: false

      # reload machine to have the auto-login and bginfo kick in
    cfg.vm.provision :reload

    cfg.vm.provision "shell", privileged: false, inline: <<-SHELL
      # Taken from https://stackoverflow.com/questions/28997799/how-to-create-a-run-as-administrator-shortcut-using-powershell
      $WshShell = New-Object -comObject WScript.Shell
      $Shortcut = $WshShell.CreateShortcut("$Home\\Desktop\\VS Code Presentation.lnk")
      $Shortcut.TargetPath = "C:\\Program Files\\Microsoft VS Code\\Code.exe"
      $Shortcut.Save()

      $bytes = [System.IO.File]::ReadAllBytes("$Home\\Desktop\\VS Code Presentation.lnk")
      $bytes[0x15] = $bytes[0x15] -bor 0x20 #set byte 21 (0x15) bit 6 (0x20) ON
      [System.IO.File]::WriteAllBytes("$Home\\Desktop\\VS Code Presentation.lnk", $bytes)

      #git clone https://github.com/pauby/presentations c:\\git-presentations --depth 1 -q
    SHELL

    cfg.vm.post_up_message = "All done!"
  end
end